apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: "{{ .Values.appName }}"
    version: "{{ .Values.appVersion }}"
  name: "{{ .Values.appName }}"
  namespace: "{{ .Values.namespace }}"
spec:
  replicas: { { .Values.replicaCount } }
  selector:
    matchLabels:
      app: "{{ .Values.appName }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.appName }}"
        version: "{{ .Values.appVersion }}"
    spec:
      containers:
        - name: "{{ .Values.appName }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default . }}"
          ports:
            - containerPort: 3000
          env:
            - name: DB_URL
              valueFrom:
                secretKeyRef:
                  name: config
                  key: DB_URL
            - name: APP_ID
              valueFrom:
                secretKeyRef:
                  name: config
                  key: APP_ID
            - name: PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: config
                  key: PRIVATE_KEY
            - name: WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: config
                  key: WEBHOOK_SECRET
            - name: SLACK_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: config
                  key: SLACK_WEBHOOK_URL
            - name: SLACK_CRON_PATTERN
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: SLACK_CRON_PATTERN
            - name: SLACK_DAY_INTERVAL
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: SLACK_DAY_INTERVAL
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: config
                  key: SENTRY_DSN
